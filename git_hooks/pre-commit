#!/usr/bin/python
import subprocess
import os
import sys

def git(*args):
  return subprocess.Popen(['git']+list(args), stdout=subprocess.PIPE).communicate()[0]

#check for .deprecate file in the current directory, usually the root of the repository
if os.path.isfile(".deprecate") :
  dep = open('.deprecate', 'r')

  #initiate lists to be used later
  directories = list()
  files = list()
  warnings = list()

  #iterate through the lines in the file to create lists for directories and files
  for line in dep :
    if line[:3] == 'd: ' :
      line = line.rstrip('\n').replace(line[:3], '')
      directories.append(line)
    elif line[:3] == 'f: ' :
      line = line.rstrip('\n').replace(line[:3], '')
      files.append(line)

  dep.close()

  #get the output of "git diff --staged --name-only"
  out = git('diff', '--staged', '--name-only').rstrip('\n')

  changes = out.split('\n')

  for change in changes :
    for directory in directories :
      if change[:len(directory)] == directory :
        warnings.append(change)
    for file in files :
      if change == file :
        warnings.append(change)

  warningMessage = "";

  if len(warnings) > 0 :
    for warning in warnings :
      warningMessage += warning + '\n'
  else :
    sys.exit(0)

  print '\033[91m' + 'The following files are deprecated:' + '\033[0m'
  print '\033[93m' + warningMessage + '\033[0m'

  sys.stdin = open('/dev/tty')
  accept = raw_input('You are about to commit changes to deprecated files. \nDo you wish to continue? (y/n) ')

  if accept.strip().lower().startswith('y') :
    sys.exit(0)
  else :
    print '\033[93m' + 'Commit has been aborted.' + '\033[0m'
    sys.exit(1)
